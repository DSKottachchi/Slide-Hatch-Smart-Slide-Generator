[{"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/index.js":"1","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/App.js":"2","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reportWebVitals.js":"3","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/store.js":"4","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/SlideGenerate.js":"5","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/Test.js":"6","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/EditText.js":"7","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/Home.js":"8","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/SlideImage.js":"9","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/AddText.js":"10","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/QuestionGenerate.js":"11","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/ImageUpload.js":"12","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/TextSlide.js":"13","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/ReorderSlides.js":"14","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/MasterSlide.js":"15","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/SideNav.js":"16","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/authActions.js":"17","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/FileUpload.js":"18","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/SlidePreview.js":"19","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/types.js":"20","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/errorActions.js":"21","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/NavBar/NavBar.js":"22","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reducers/index.js":"23","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/RegisterModal.js":"24","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reducers/errorReducer.js":"25","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reducers/authReducer.js":"26"},{"size":500,"mtime":1617261711241,"results":"27","hashOfConfig":"28"},{"size":1937,"mtime":1622311488128,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1617261711242,"results":"30","hashOfConfig":"28"},{"size":428,"mtime":1622311388234,"results":"31","hashOfConfig":"28"},{"size":11800,"mtime":1621322590611,"results":"32","hashOfConfig":"28"},{"size":4835,"mtime":1619172483583,"results":"33","hashOfConfig":"28"},{"size":3177,"mtime":1621321591365,"results":"34","hashOfConfig":"28"},{"size":8140,"mtime":1621231308437,"results":"35","hashOfConfig":"28"},{"size":2989,"mtime":1620793523736,"results":"36","hashOfConfig":"28"},{"size":2202,"mtime":1621239539596,"results":"37","hashOfConfig":"28"},{"size":5889,"mtime":1621256505284,"results":"38","hashOfConfig":"28"},{"size":1026,"mtime":1621231372807,"results":"39","hashOfConfig":"28"},{"size":5750,"mtime":1620891010754,"results":"40","hashOfConfig":"28"},{"size":4210,"mtime":1621318558289,"results":"41","hashOfConfig":"28"},{"size":3314,"mtime":1621256673040,"results":"42","hashOfConfig":"28"},{"size":3744,"mtime":1621256320356,"results":"43","hashOfConfig":"28"},{"size":2037,"mtime":1622311414662,"results":"44","hashOfConfig":"28"},{"size":8276,"mtime":1621228882302,"results":"45","hashOfConfig":"28"},{"size":1414,"mtime":1621230755838,"results":"46","hashOfConfig":"28"},{"size":472,"mtime":1619156716860,"results":"47","hashOfConfig":"28"},{"size":312,"mtime":1619261033129,"results":"48","hashOfConfig":"28"},{"size":985,"mtime":1621228843932,"results":"49","hashOfConfig":"28"},{"size":209,"mtime":1619152244534,"results":"50","hashOfConfig":"28"},{"size":3801,"mtime":1621230413518,"results":"51","hashOfConfig":"28"},{"size":596,"mtime":1619156694863,"results":"52","hashOfConfig":"28"},{"size":1405,"mtime":1619170068320,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1duc3kk",{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"56"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"56"},"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/index.js",[],["125","126"],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/App.js",["127","128","129","130"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ImageUpload from './pages/ImageUpload';\nimport EditText from \"./pages/EditText\";\nimport SideNav from './components/SideNav';\nimport TextSlide from './pages/TextSlide';\nimport Test from './pages/Test';\nimport SlideGenerate from './pages/SlideGenerate';\nimport QuestionGenerate from './pages/QuestionGenerate';\nimport AddText from './pages/AddText';\nimport ReorderSlides from './pages/ReorderSlides';\nimport SlideImage from './pages/SlideImage';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authActions';\nimport { useEffect } from 'react';\nimport MasterSlide from './pages/MasterSlide';\n\nfunction App() {\n\n  // useEffect(() => {\n  //   store.dispatch(loadUser());\n  // }, [])\n\n  return (\n    // <Provider store = {store}>\n      <Router>\n          <div className=\"slidegen-container\">\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/image-upload\" exact component={ImageUpload} />\n              <Route path=\"/reorder-slides\" exact component={ReorderSlides} />\n              <Route path=\"/edit-text\" exact component={EditText} />\n              <Route path=\"/slide-image\" exact component={SlideImage} />\n              <Route path=\"/add-text\" exact component={AddText} />\n              <Route path=\"/master-slide\" exact component={MasterSlide} />\n              <Route path=\"/slide-generate\" exact component={SlideGenerate} />\n              <Route path=\"/question-generate\" exact component={QuestionGenerate} />\n              <Route path=\"/SideNav\" exact component={SideNav} />\n              <Route path=\"/text-slide\" exact component={TextSlide} />\n              <Route path=\"/test\" exact component={Test} />\n            </Switch>\n          </div>\n        </Router>\n    // </Provider>\n  );\n}\n\nexport default App;\n","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reportWebVitals.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/store.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/SlideGenerate.js",["131","132","133","134","135","136","137","138","139","140","141","142"],"import { Link, useLocation } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport React, { useState, useEffect } from \"react\";\nimport pptxgen from \"pptxgenjs\";\nimport axios from 'axios';\nimport { jsPDF } from \"jspdf\";\nimport { BsFileEarmarkPlus, BsFileDiff, BsGridFill, BsLayoutTextSidebarReverse, BsPlusSquare, BsFillQuestionSquareFill } from 'react-icons/bs';\n\n\nconst SlideGenerate = () => {\n    let location = useLocation();\n    const [color, setColor] = useState('FFFFFF');\n    const [textCollection, setTextCollection] = useState();\n    var heading = location.state;\n\n    useEffect(() => {\n        console.log(\"Headting is\", heading);\n        axios.get('http://localhost:5000/api/sum-text/texts')\n        .then(res => {\n            console.log(\"responsesss, \", res);\n            setTextCollection(res.data);\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }, []);\n    \n    // DISPLAY DROPDOWN START\n    const [isDisplay, setIsDisplay] = useState(false);\n    const onsdisplayDropdown = () => setIsDisplay(!isDisplay);\n    // DISPLAY DROPDOWN END\n\n\n    const deleteText = async(id) => {\n        window.location.reload();\n        const res = await axios.delete(`http://localhost:5000/api/image/text-delete/${id}`)\n        .then(res => {\n            console.log(\"Successfully Deleted Texts\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    // GENERATE QUESTION \n    const generateQuestion = () => {\n        console.log(\"Collection\", textCollection);\n\n        textCollection.forEach(function (text) {\n            try {\n                // POST REQUEST\n                const resPost = axios.post('http://localhost:5000/api/question-text', { text: text }, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                })\n                .then(res => {\n                    console.log(res.data);\n                    // console.log(resPost);\n                    console.log(\"Successfully Generated Question\");\n                    const doc = new jsPDF();\n\n                    doc.setFontSize(5);\n                    doc.text(5, 25, res.data);\n                    doc.save(\"a4.pdf\");\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n\n            } catch(err) {\n                if(err === 500) {\n                    console.log(\"There was a problem with the server\");\n                } else {\n                    console.log(\"Error: \", err.response);\n                }\n            }\n        });\n\n\n    }\n\n    const generateSlide = () => {\n\n        console.log(textCollection);\n        let pres = new pptxgen();\n\n        // pres.defineSlideMaster({ title: 'GREY_MASTER', bkgd: 'FAF1F1' });\n        pres.background = { fill: color };\n        pres.layout = \"LAYOUT_WIDE\";\n\n        pres.defineSlideMaster({\n            title: \"MASTER_SLIDE\",\n            background: { color: \"FFFFFF\" },\n            objects: [\n                { rect: { x: 0.0, y: 5.3, w: \"100%\", h: 0.75, fill: { color: \"F1F1F1\" } } },\n                { text: { text: heading, options: { x: 3.0, y: 5.3, w: 5.5, h: 0.75 } } },\n            ],\n            slideNumber: { x: 0.3, y: \"90%\" },\n        });\n        let slidemain = pres.addSlide({ masterName: \"MASTER_SLIDE\" });\n        slidemain.addText(\"How To Create PowerPoint Presentations with JavaScript\", { x: 0.5, y: 0.7, fontSize: 18 });\n\n        textCollection.forEach(function (text) {\n            let slide = pres.addSlide();\n            slide.background = { fill: color }; \n            // slide.background({ path: \".png\" });\n            slide.addImage({ path: text.imageURL, x: 9.5, y: 0, w: 4.0, h: 10.0, sizing: { type: \"cover\", w: 4.0, h: 10.0 }  });\n            slide.addText(\n                text.text,\n                {\n                    x: 0.3,\n                    y: 3.5,\n                    w: '65%',\n                    fontSize:20,\n                    color: '000000',\n                    align: pres.AlignH.justify\n                }\n            );\n        });\n        pres.writeFile(\"Sample Presentation.pptx\");\n    }\n\n    const handleColor = (e) => {\n        console.log(e.target.value);\n        setColor(e.target.value);\n    }\n    \n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Generate Slides\n                    </div>\n                    <div className=\"slide-btn float-right-question\">    \n                        <button onClick={generateQuestion} className=\"slidegen-btn primary-color question-btn\">\n                            <BsFillQuestionSquareFill className=\"nav-icon\" />\n                        </button>\n                    </div>\n                    <div className=\"slide-btn float-right\">    \n                        <button data-toggle=\"modal\" data-target=\"#myModal\" className=\"slidegen-btn primary-color\">\n                            <i className=\"txt-icon\">\n                                <svg viewBox=\"0 0 426.66667 426.66667\"><path d=\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"/></svg>\n                            </i>\n                            Generate Slides\n                        </button>\n                    </div>\n\n                    <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                            <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Select Template</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <label class=\"mt-3\">\n                                            <input onChange={handleColor} type=\"radio\" value=\"FFFFFF\" name=\"color\" class=\"card-input-element d-none\" />\n                                            <div class=\"card card-body bg-light d-flex flex-row justify-content-between align-items-center white-color\">\n                                            </div>\n                                        </label>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <label class=\"mt-3\">\n                                            <input onChange={handleColor} type=\"radio\" value=\"54D7F7\" name=\"color\" class=\"card-input-element d-none\" />\n                                            <div class=\"card card-body bg-light d-flex flex-row justify-content-between align-items-center blue-color\">\n                                            </div>\n                                        </label> \n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <label class=\"mt-3\">\n                                            <input onChange={handleColor} type=\"radio\" value=\"7FFFB9\" name=\"color\" class=\"card-input-element d-none\" />\n                                            <div class=\"card card-body bg-light d-flex flex-row justify-content-between align-items-center green-color\">\n                                            </div>\n                                        </label> \n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <label class=\"mt-3\">\n                                            <input onChange={handleColor} type=\"radio\" value=\"FFF163\" name=\"color\" class=\"card-input-element d-none\" />\n                                            <div class=\"card card-body bg-light d-flex flex-row justify-content-between align-items-center yellow-color\">\n                                            </div>\n                                        </label> \n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <label class=\"mt-3\">\n                                            <input onChange={handleColor} type=\"radio\" value=\"D4A8F2\" name=\"color\" class=\"card-input-element d-none\" />\n                                            <div class=\"card card-body bg-light d-flex flex-row justify-content-between align-items-center purple-color\">\n                                            </div>\n                                        </label> \n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <label class=\"mt-3\">\n                                            <input onChange={handleColor} type=\"radio\" value=\"D1D8D1\" name=\"color\" class=\"card-input-element d-none\" />\n                                            <div class=\"card card-body bg-light d-flex flex-row justify-content-between align-items-center grey-color\">\n                                            </div>\n                                        </label> \n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" onClick={generateSlide} class=\"btn btn-primary\">Generate</button>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"row\">\n                            { textCollection && textCollection.map(data => (\n                                <div className=\"col-3\">\n                                    <div className=\"slide-preview-item\">\n                                        <div className=\"img-wrap no-margin overflow-hide option-display txt-display\" key={data.id}>\n                                            <div>{ data.text }</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )) }\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default SlideGenerate;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/Test.js",["143","144","145","146","147"],"import { Link } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport Tesseract from 'tesseract.js';\nimport React, { useState, useEffect } from \"react\";\n\nconst { createWorker } = Tesseract;\n\n\nconst TextSlide = () => {\n    \n    const worker = createWorker({\n        logger: m => console.log(m),\n    });\n\n\n    const [ocr, setOcr] = useState('Recognizing...');\n        useEffect(() => {\n        slideConverison();\n    });\n\n    var listOfImages =[];\n    const [loading, setLoading] = useState(false);\n\n    // UPLOAD IMAGE START\n    function importAll(r) {\n        return r.keys().map(r);\n    }\n\n    componentWillMount();\n    function componentWillMount() {\n        listOfImages = importAll(require.context('../../../client/public/uploads/', false, /\\.(png|jpe?g|svg)$/));\n    }\n    // UPLOAD IMAGE END\n\n    // function slideConverison() {\n    //     var i;\n    //     for (i = 0; i < listOfImages.length; i++) {\n    //         Tesseract\n    //             .recognize(listOfImages[i].default)\n    //             .then((result) => {\n    //                 console.log(result.text);\n    //                 setOcr(result.text);\n\n    //             })\n    //             .catch((err) => {\n    //                 throw err;\n    //             });\n    //     }\n    // }\n\n    const slideConverison = async() => {\n        var i;\n        for (i = 0; i < listOfImages.length; i++) {\n            await worker.load();\n            await worker.loadLanguage('eng');\n            await worker.initialize('eng');\n            worker._currentJob = null;\n            const { data: { text } } = await worker.recognize(listOfImages[i].default);\n            // setOcr(text);\n        }\n        await worker.terminate();\n    };\n\n\n    // DISPLAY DROPDOWN START\n    const [isDisplay, setIsDisplay] = React.useState(false)\n    const onsdisplayDropdown = () => setIsDisplay(!isDisplay)\n    // DISPLAY DROPDOWN END\n\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Edit Slides\n                    </div>\n                    <div className=\"slide-btn float-right\">    \n                        <Link to='/add-text'>                         \n                            <button className=\"slidegen-btn primary-color\">\n                                <i className=\"txt-icon\">\n                                    <svg viewBox=\"0 0 426.66667 426.66667\"><path d=\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"/></svg>\n                                </i>\n                                Add New Slides\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"row\">\n                            { listOfImages && listOfImages.map(image => (\n                                <div className=\"col-3\">\n                                    <div className=\"slide-preview-item\">\n                                        <div className=\"img-wrap no-margin overflow-hide option-display txt-display\" key={image.id}>\n                                                <div className=\"option-slide-icon\">\n                                                    <BsThreeDotsVertical onClick={onsdisplayDropdown}/>\n                                                    <div className={ isDisplay === true ? \"option-dropdown-inner\" : \"option-dropdown-close\"}>\n                                                        <a href=\"./add-text\">Edit</a>\n                                                        <a href=\"#\">Delete</a>\n                                                    </div>\n                                                </div>\n                                            <div>{ ocr }</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )) }\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default TextSlide;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/EditText.js",["148","149","150","151","152","153","154","155","156","157","158"],"// EDIT TEXT\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport SlidePreview from '../components/SlidePreview'\nimport 'draft-js/dist/Draft.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport FileUpload from '../components/FileUpload';\n\nconst EditText = () => {\n\n    let location = useLocation();\n    const [editText, setEditText] = useState();\n    let id = '';\n\n    // REMOVING NEW LINE CHARACTERS\n    const splitText = (text) => {\n        let lineText = text.split('\\n').map(str => <p>{str}</p>);\n        return lineText;\n    }\n\n    useEffect(() => {\n        id = location.state;\n        // GET THE EDIT TEXT ITEM\n        const res = axios.get(`http://localhost:5000/api/image/text-item/${location.state}`)\n        .then(res => {\n            let text = res.data.image;\n            let txt = splitText(text);\n            setEditText(text);\n            console.log(\"Successfully retrieved\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }, []);\n\n\n    // EDIT TEXT FUNCTION\n    const editTextSubmit = async(event) => {\n        event.preventDefault();\n        const res = await axios.post(`http://localhost:5000/api/image/text-edit/${location.state}`, { image: editText })\n        .then(res => {\n            console.log(\"Successfully Edited Texts\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n        window.location.reload();\n    }\n\n    const handleSubmit = (event) => {\n        alert('A name was submitted: ' + editText);\n    }\n\n    const handleChange = (event) => {\n        setEditText(event.target.value);\n    }\n\n    const editorRef = useRef(null);\n    const log = () => {      \n      if (editorRef.current) {\n        console.log(editorRef.current.getContent());\n      }\n    };\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container slide-inner-container\">\n                    <div className=\"container edit-row\">\n                        <div className=\"slide-header\">\n                            Edit Slides\n                        </div>\n                    </div>\n                    <div className=\"slide-dragdrop-container\">\n                        <div className=\"\">\n                            {/* EDIT TEXT FORM START */}\n                            <div className=\"form-group\">\n                                <form onSubmit={editTextSubmit}>\n                                    <textarea onChange={handleChange} className=\"wysiwyg-inner\" defaultValue={editText} type=\"text\" cols=\"100\" rows=\"15\"></textarea> \n                                    <input type=\"submit\" value=\"Submit\" className=\"slidegen-btn primary-color float-right content-start\" />\n                                </form>\n                            </div>\n                            {/* EDIT TEXT FORM END */}\n                        </div>\n                    </div>\n                </div>\n            </div>           \n        </div>\n    );\n}\n\nexport default EditText;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/Home.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/SlideImage.js",["159","160","161","162","163"],"import { Link, useLocation } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport SlidePreview from '../components/SlidePreview';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport FileUpload from '../components/FileUpload';\n\nconst SlideUpload = () => {\n\n    const [imageURL, setImageURL] = useState();\n    let location = useLocation();\n    var sumID = location.state;\n\n    const masterSubmit = () => {\n        try {\n            const resPost = axios.post(`http://localhost:5000/api/sum-text/media-url/${location.state}`, { imageURL: imageURL }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            })\n            .then(res => {\n                console.log(res.data);\n                // console.log(resPost);\n                console.log(\"Successfully Edited Texts\");\n                \n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        } catch(err) {\n            if(err === 500) {\n                console.log(\"There was a problem with the server\");\n            } else {\n                console.log(\"Error: \", err.response);\n            }\n        }\n    }\n\n    const handleChange = (event) => {\n        setImageURL(event.target.value);\n    }\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Add Media URL\n                    </div>\n                </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"form-container\">\n                            <form onSubmit={masterSubmit}>\n                                <label>Add Image URL</label>\n                                <input onChange={handleChange} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" />\n                                <label className=\"mt-4\">Add Video URL</label>\n                                <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" />\n                                <div className=\"slide-btn float-right mt-5\">    \n                                    {/* <Link to={{pathname: \"/slide-generate\", state: heading}} className=\"textslide-link\">                          */}\n                                        <button className=\"slidegen-btn primary-color\">\n                                            Save\n                                        </button>\n                                    {/* </Link> */}\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default SlideUpload;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/AddText.js",["164","165","166","167","168","169","170"],"import { Link, useLocation, useParams } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport SlidePreview from '../components/SlidePreview'\nimport { Editor } from '@tinymce/tinymce-react';\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n\nconst EditText = () => {\n\n    const [addText, setTextCollection] = useState();\n\n    // UPLOADING NEW TEXT \n    const handleSubmit = async(file) => {\n        try {\n            const res = await axios.post('http://localhost:5000/api/image', { image: addText }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n        } catch(err) {\n            if(err === 500) {\n                console.log(\"There was a problem with the server\");\n            } else {\n                console.log(\"Error: \", err.response);\n            }\n        }\n    };\n\n    // SET THE TEXT COLLECTION\n    const handleChange = (event) => {\n        setTextCollection(event.target.value);\n    }\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container slide-inner-container\">\n                    <div className=\"slide-dragdrop-container\">\n                        <div className=\"page-heading\">Add Text</div>\n                        <div className=\"\">\n                            <div className=\"form-group\">\n                                {/* ADD TEXT FORM START */}\n                                <form onSubmit={handleSubmit}>\n                                    <textarea onChange={handleChange} className=\"wysiwyg-inner\" type=\"text\" cols=\"100\" rows=\"15\"></textarea> \n                                    <input type=\"submit\" value=\"Submit\" className=\"slidegen-btn primary-color float-right content-start\" />\n                                </form>\n                                {/* ADD TEXT FORM END */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>           \n        </div>\n    );\n}\n\nexport default EditText;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/QuestionGenerate.js",["171","172","173","174","175","176"],"// QUESTION GENERATE\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst QuestionGenerate = () => {\n\n    const [textCollection, setTextCollection] = useState();\n    let location = useLocation();\n    let texts = '';\n\n    useEffect(() => {\n        console.log(\"Recognise Data: \", location.state);\n        texts = location.state;\n        texts.forEach(function (text) {\n            try {\n                const resPost = axios.post('http://localhost:5000/api/question-text', { text: text }, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                })\n                .then(res => {\n                    console.log(res.data);\n                    // console.log(resPost);\n                    console.log(\"Successfully Edited Texts\");\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n\n            } catch(err) {\n                if(err === 500) {\n                    console.log(\"There was a problem with the server\");\n                } else {\n                    console.log(\"Error: \", err.response);\n                }\n            }\n        });\n\n        const resGet = axios.get('http://localhost:5000/api/sum-text/texts')\n        .then(res => {\n            console.log(\"HIIII Response\", res);\n            setTextCollection(res.data);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n        \n    }, []);\n    \n\n    // DISPLAY DROPDOWN START\n    const [isDisplay, setIsDisplay] = useState(false);\n    const onsdisplayDropdown = () => setIsDisplay(!isDisplay);\n    // DISPLAY DROPDOWN END\n\n\n    const deleteText = async(id) => {\n        window.location.reload();\n        const res = await axios.delete(`http://localhost:5000/api/image/text-delete/${id}`)\n        .then(res => {\n            console.log(\"Successfully Deleted Texts\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Edit Slides\n                    </div>\n                    <div className=\"slide-btn float-right\">    \n                        <Link className=\"textslide-link\" to='/add-text'>                         \n                            <button className=\"slidegen-btn primary-color\">\n                                <i className=\"txt-icon\">\n                                    <svg viewBox=\"0 0 426.66667 426.66667\"><path d=\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"/></svg>\n                                </i>\n                                Add New Slides\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"row\">\n                            { textCollection && textCollection.map(data => (\n                                <div className=\"col-3\">\n                                    <div className=\"slide-preview-item\">\n                                        <div className=\"img-wrap no-margin overflow-hide option-display txt-display\" key={data.id}>\n                                                <div className=\"option-slide-icon\">\n                                                    <BsThreeDotsVertical onClick={() => onsdisplayDropdown()}/>\n                                                    <div className={ isDisplay === true ? \"option-dropdown-inner\" : \"option-dropdown-close\"}>\n                                                        <Link to={{pathname: \"/edit-text\", state: data._id }} className=\"option-dropdown-item\" >Edit</Link>\n                                                        <a className=\"option-dropdown-item\" onClick={() => deleteText(data._id)}>Delete</a>\n                                                    </div>\n                                                </div>\n                                            <div>{ data.text }</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )) }\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <div className=\"row\">\n                            <div className=\"slide-btn float-right mt-5\">    \n                                <Link className=\"textslide-link\" to='/add-text'>                         \n                                    <button className=\"slidegen-btn primary-color\">\n                                        Save\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default QuestionGenerate;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/ImageUpload.js",["177","178"],"// IMAGE UPLOAD PAGE\nimport { Link } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport SlidePreview from '../components/SlidePreview';\nimport { useState } from 'react';\nimport FileUpload from '../components/FileUpload';\n\nconst ImageUpload = () => {\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"row slide-body margin-none\">\n                    <div className=\"col-md-9\">\n                        <div className=\"slide-dragdrop-container\">\n                            <div className=\"form-container mt-5\">\n                                <FileUpload />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3 margin-none padding-none\">\n                        <SlidePreview />\n                    </div>\n                </div>\n            </div> \n        </div>\n    );\n}\n\nexport default ImageUpload;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/TextSlide.js",["179","180","181"],"import { Link } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst TextSlide = () => {\n\n    const [textCollection, setTextCollection] = useState();\n    useEffect(() => {\n        axios.get('http://localhost:5000/api/image/texts')\n        .then(res => {\n            setTextCollection(res.data);\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }, []);\n    \n\n    // DISPLAY DROPDOWN START\n    const [isDisplay, setIsDisplay] = useState(false);\n    const onsdisplayDropdown = () => setIsDisplay(!isDisplay);\n    // DISPLAY DROPDOWN END\n\n\n    const deleteText = async(id) => {\n        window.location.reload();\n        const res = await axios.delete(`http://localhost:5000/api/image/text-delete/${id}`)\n        .then(res => {\n            console.log(\"Successfully Deleted Texts\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    const sumText = async(id) => {\n        console.log(\"Helo\");\n        textCollection.forEach(function (text) {\n            try {\n                    const resPost = axios.post('http://localhost:5000/api/sum-text', { text: text }, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                })\n                .then(res => {\n                    console.log(res.data);\n                    // console.log(resPost);\n                    console.log(\"Successfully Edited Texts\");\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n\n            } catch(err) {\n                if(err === 500) {\n                    console.log(\"There was a problem with the server\");\n                } else {\n                    console.log(\"Error: \", err.response);\n                }\n            }\n        });\n    }\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Edit Slides\n                    </div>\n                    <div className=\"slide-btn float-right\">    \n                        <Link className=\"textslide-link\" to='/add-text'>                         \n                            <button className=\"slidegen-btn primary-color\">\n                                <i className=\"txt-icon\">\n                                    <svg viewBox=\"0 0 426.66667 426.66667\"><path d=\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"/></svg>\n                                </i>\n                                Add New Slides\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"row\">\n                            { textCollection && textCollection.map(data => (\n                                <div className=\"col-3\">\n                                    <div className=\"slide-preview-item\">\n                                        <div className=\"img-wrap no-margin overflow-hide option-display txt-display\" key={data.id}>\n                                                <div className=\"option-slide-icon\">\n                                                    <BsThreeDotsVertical onClick={() => onsdisplayDropdown()}/>\n                                                    <div className={ isDisplay === true ? \"option-dropdown-inner\" : \"option-dropdown-close\"}>\n                                                        <Link to={{pathname: \"/edit-text\", state: data._id }} className=\"option-dropdown-item\" >Edit</Link>\n                                                        <a className=\"option-dropdown-item\" onClick={() => deleteText(data._id)}>Delete</a>\n                                                    </div>\n                                                </div>\n                                            <div>{ data.image }</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )) }\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <div className=\"row\">\n                            <div className=\"slide-btn float-right mt-5\">    \n                                <Link onClick={sumText} to={{pathname: \"/reorder-slides\", state: textCollection}} className=\"textslide-link\">                         \n                                    <button className=\"slidegen-btn primary-color\">\n                                        Save\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default TextSlide;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/ReorderSlides.js",["182","183","184","185","186","187","188","189"],"// ADD MEDIA PAGE\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst ReorderSlides = () => {\n\n    const [textCollection, setTextCollection] = useState();\n    const [loading, setLoading] = useState(false);\n\n    let location = useLocation();\n    let texts = '';\n\n    useEffect(() => {\n        texts = location.state;\n        \n        sendGetRequest();\n        // const resGet = axios.get('http://localhost:5000/api/sum-text/texts')\n        // .then(res => {\n        //     console.log(\"HIIII Response\", res);\n        //     setTextCollection(res.data);\n        // })\n        // .catch(function (error) {\n        //     console.log(error);\n        // });\n        \n    }, []);\n    \n    const sendGetRequest = async () => {\n        setLoading(true)\n        try {\n            const resGet = await axios.get('http://localhost:5000/api/sum-text/texts')\n            .then(res => {\n                setTextCollection(res.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n        setLoading(false);\n    };\n\n    // DISPLAY DROPDOWN START\n    const [isDisplay, setIsDisplay] = useState(false);\n    const onsdisplayDropdown = () => setIsDisplay(!isDisplay);\n    // DISPLAY DROPDOWN END\n\n\n    const deleteText = async(id) => {\n        window.location.reload();\n        const res = await axios.delete(`http://localhost:5000/api/image/text-delete/${id}`)\n        .then(res => {\n            console.log(\"Successfully Deleted Texts\");\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    // LOADER START\n    if(loading) return (\n        <div class=\"text-center page-spinner\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <div className=\"mt-3\">\n                Loading Texts\n            </div>\n        </div> \n    );\n    // LOADER END\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Add Media\n                    </div>\n                </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"row\">\n                            { textCollection && textCollection.map(data => (\n                                <div className=\"col-3\">\n                                    <Link to={{pathname: \"/slide-image\", state: data._id }} className=\"upload-link\">\n                                        <div className=\"slide-preview-item upload-link-inner\">\n                                            <div className=\"img-wrap no-margin overflow-hide option-display txt-display\" key={data.id}>\n                                                <div>{ data.text }</div>\n                                            </div>\n                                        </div>\n                                    </Link>\n                                </div>\n                            )) }\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <div className=\"row\">\n                            <div className=\"slide-btn float-right mt-5\">    \n                                <Link className=\"textslide-link\" to='/master-slide'>                         \n                                    <button className=\"slidegen-btn primary-color\">\n                                        Save\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default ReorderSlides;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/pages/MasterSlide.js",["190","191","192","193","194","195","196","197","198"],"import { Link, useLocation, useParams } from 'react-router-dom';\nimport SideNav from '../components/SideNav';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport React, { useState, useEffect } from \"react\";\nimport { ChromePicker } from 'react-color';\nimport pptxgen from \"pptxgenjs\";\nimport axios from 'axios';\n\nconst MasterSlide = () => {\n\n    const [textCollection, setTextCollection] = useState();\n    const [heading, setHeading] = useState();\n    const [backgroundColor, setBackground] = useState();\n    let location = useLocation();\n    let texts = '';    \n\n    // DISPLAY DROPDOWN START\n    const [isDisplay, setIsDisplay] = useState(false);\n    const onsdisplayDropdown = () => setIsDisplay(!isDisplay);\n    // DISPLAY DROPDOWN END\n\n    const handleColorChange = (color) => { \n        setBackground(color);\n    }\n    \n    // ADDING A MAIN SLIDE \n    const masterSubmit = () => {\n        let pptx = new pptxgen();\n        pptx.layout = \"LAYOUT_WIDE\";\n        pptx.background = { fill: \"36CF36\" };\n        pptx.defineSlideMaster({\n            title: \"MASTER_SLIDE\",\n            background: { fill: \"36CF36\" },\n            objects: [\n                { rect: { x: 0.0, y: 5.3, w: \"100%\", h: 0.75, fill: { color: \"F1F1F1\" } } },\n                { text: { text: heading, options: { x: 3.0, y: 5.3, w: 5.5, h: 0.75 } } },\n            ],\n            slideNumber: { x: 0.3, y: \"90%\" },\n        });\n        \n       \n        pptx.writeFile();\n    }\n\n    const handleChange = (event) => {\n        setHeading(event.target.value);\n    }\n\n    return (\n        <div className=\"slide-web-container\">\n            <SideNav />\n            <div className=\"slide-body width-100\">\n                <div className=\"container edit-row\">\n                    <div className=\"slide-header\">\n                        Add Master Slide\n                    </div>\n                </div>\n                <div className=\"slide-inner-container\">\n                    <div className=\"text-slide-container\">\n                        <div className=\"form-container\">\n                            {/* MASTER SLIDE CONTAINER START */}\n                            <form onSubmit={masterSubmit}>\n                                <label>Title</label>\n                                <input onChange={handleChange} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" />\n                                <label className=\"mt-4\">Set Template Color</label>\n                                <ChromePicker className=\"mt-3\" color={ backgroundColor } onChangeComplete={ handleColorChange } />\n                                <div className=\"slide-btn float-right mt-5\">    \n                                    <Link to={{pathname: \"/slide-generate\", state: heading}} className=\"textslide-link\">                         \n                                        <button className=\"slidegen-btn primary-color\">\n                                            Save\n                                        </button>\n                                    </Link>\n                                </div>\n                            </form>\n                            {/* MASTER SLIDE CONTAINER END */}\n                        </div>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n\nexport default MasterSlide;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/SideNav.js",["199","200","201","202","203"],"// SIDE NAV COMPONENT \nimport React from 'react';\nimport { BsFileEarmarkPlus, BsFileDiff, BsGridFill, BsLayoutTextSidebarReverse, BsPlusSquare, BsFillQuestionSquareFill, BsFillForwardFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";  \nimport { Nav } from 'react-bootstrap';\n\nconst SideNav = () => {\n    const [bgColor, setbgColor] = useState('');\n\n    return (\n        // SIDE NAV COMPONENT START\n        <div className=\"sidenav-container fixed-left\">\n            <div className=\"sidenav-inner\">\n                <ul className=\"sidenav-list\">\n                    {/* SIDE NAV LIST ITEM */}\n                    <li className=\"sidenav-list-item\">\n                        <NavLink activeClassName=\"current-link\" to='/image-upload'>\n                            <BsFileEarmarkPlus className=\"nav-icon\" />\n                            <div>Upload Image</div>\n                        </NavLink>\n                    </li>\n                    {/* SIDE NAV LIST ITEM */}\n\n                    {/* SIDE NAV LIST ITEM */}\n                    <li className=\"sidenav-list-item\">\n                        <NavLink activeClassName=\"current-link\" to='/text-slide'>\n                            <BsFileDiff className=\"nav-icon\" />\n                            <div>Edit Texts</div>\n                        </NavLink>\n                    </li>\n                    {/* SIDE NAV LIST ITEM */}\n\n                    {/* SIDE NAV LIST ITEM */}\n                    <li className=\"sidenav-list-item\">\n                        <NavLink activeClassName=\"current-link\" to='/reorder-slides'>\n                            <BsGridFill className=\"nav-icon\" />\n                            <div>Add Media</div>\n                        </NavLink>\n                    </li>\n                    {/* SIDE NAV LIST ITEM */}\n\n                    {/* SIDE NAV LIST ITEM */}\n                    <li className=\"sidenav-list-item\">\n                        <NavLink activeClassName=\"current-link\" to='/master-slide'>\n                            <BsLayoutTextSidebarReverse className=\"nav-icon\" />\n                            <div>Add Master Slide</div>\n                        </NavLink>\n                    </li>\n                    {/* SIDE NAV LIST ITEM */}\n\n                    {/* SIDE NAV LIST ITEM */}\n                    <li className=\"sidenav-list-item\">\n                        <NavLink activeClassName=\"current-link\" to='/slide-generate'>\n                            <BsPlusSquare className=\"nav-icon\" />\n                            <div>Generate Slide</div>\n                        </NavLink>\n                    </li>\n                    {/* SIDE NAV LIST ITEM */}\n\n                    {/* SIDE NAV LIST ITEM */}\n                    <div className=\"guideline-container\">\n                        <div className=\"guideline-text\">\n                            Want to learn more about slide designs? \n                        </div>\n                        {/* <div className=\"guideline-text mt-3\">\n                            Checkout the link below\n                        </div> */}\n                        <li className=\"sidenav-list-item guideline-btn\">\n                            <a href='https://venngage.com/blog/presentation-design/'>\n                                <div className=\"guideline-btn-text\">Learn More</div>\n                                <BsFillForwardFill className=\"guideline-icon\" />\n                            </a>\n                        </li>\n                    </div>\n                    \n                    {/* SIDE NAV LIST ITEM */}\n                </ul>\n            </div>\n        </div>\n        // SIDE NAV COMPONENT END\n    )\n}\n\nexport default SideNav;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/authActions.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/FileUpload.js",["204","205","206","207","208"],"// FILE UPLOAD COMPONENT\nimport React, {useState} from 'react';\nimport axios from 'axios';\nimport Tesseract from 'tesseract.js';\n\n// CREATING TESSERACT JS WORKER\nconst { createWorker } = Tesseract;\n\nconst FileUpload = () => {\n\n    const worker = createWorker({\n        logger: m => console.log(m),\n    });\n\n    // INITIALISING STATES\n    const [file, setFile] = useState(null);\n    const [filename, setFilename] = useState('Choose File');    \n    const [uploadedFile, setUploadedFile] = useState({});\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    // ARRAY OF ALLOWED TYPES\n    const types = ['image/png', 'image/jpeg']\n\n    // CHANGE HANDLER, WHEN FILE IS BEING UPLOADED\n    const fileSelectedHandler = (e) => {\n        let selected = e.target.files[0];\n        // CHECK WHETHER FILE EXISTS && CHECK WHETHER ARRAY CONTAINS THE TYPE OF THE FILE\n        if(selected && types.includes(selected.type)) {\n            setFile(selected);\n            setFilename(selected.name);\n            setError('');\n        } else {\n            setFile(null);\n            setError('Please select an image file (png or jpeg)');\n        }\n    }\n\n    const getBase64 = (file) => {\n        return new Promise((resolve,reject) => {\n           const reader = new FileReader();\n           reader.onload = () => resolve(reader.result);\n           reader.onerror = error => reject(error);\n           reader.readAsDataURL(file);\n        });\n    }\n\n    // CONVERTION FROM IMAGE TO TEXT (OCR CONVERSTION)\n    const slideConverison = async(file) => {\n        setLoading(true)\n        // TESSERACT JS IMPLMENTATION\n        await worker.load();\n        await worker.loadLanguage('eng+sin');\n        await worker.initialize('eng+sin');\n        worker._currentJob = null;\n        const { data: { text } } = await worker.recognize(file);\n        let newText = JSON.stringify(text);\n        let replace = text.replace(/[\\n\\r]+/g, ' ');\n\n        // UPLOADING THE RECOGNIZED TEXT\n        try {\n            const res = await axios.post('http://localhost:5000/api/image', { image: replace }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n        } catch(err) {\n            if(err === 500) {\n                console.log(\"There was a problem with the server\");\n            } else {\n                console.log(\"Error: \", err.response);\n            }\n        }\n        \n        await worker.terminate();\n        setLoading(false);\n    };\n\n    // ON IMAGE UPLOAD\n    const onUpload = async e => {\n        console.log('sdsd');\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            // POST FILE URL LOCATION TO BACKEND\n            // NOTE: IMAGE FILE STORED LOCALLY\n            const res = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'Access-Control-Allow-Origin' : '*',\n                    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                }\n            });\n            console.log(\"as\", res);\n            const {fileName, filePath} = res.data;\n\n            slideConverison(filePath);\n            setUploadedFile({ fileName, filePath });\n        } catch(err) {\n            if(err === 500) {\n                console.log(\"There was a problem with the server\");\n            } else {\n                console.log(\"Error: \", err.response);\n            }\n        }\n    }\n\n    // LOADER START\n    if(loading) return (\n        <div class=\"form-container text-center\">\n            <div class=\"spinner-border\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n            <div className=\"mt-3\">\n                Recognizing Texts\n            </div>\n        </div> \n    );\n    // LOADER END\n\n    return (\n        <div className=\"drop-zone\">\n            {/* FILE UPLOAD FORM START */}\n            <form method=\"post\" encType=\"multipart/form-data\" onSubmit={onUpload}>\n                <input crossOrigin=\"anonymous\" type=\"file\" name=\"files\" id=\"file\" onChange={fileSelectedHandler}/>\n                <label className=\"upload-container\" htmlFor=\"file\">\n                    <span>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Capa_1\" enable-background=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" width=\"50\"><g><g><path d=\"m159.633 98.476v-52.072h123.163c6.259 0 11.884 3.821 14.191 9.64l16.819 42.431-79.75 28.328z\" fill=\"#8ac9fe\"/><path d=\"m313.808 98.48h-22.802l-16.819-42.438c-2.303-5.819-7.926-9.633-14.187-9.633h22.792c6.261 0 11.884 3.814 14.198 9.633z\" fill=\"#60b7ff\"/>\n                            <path d=\"m424.262 98.476h-222.667c-6.259 0-11.884-3.821-14.191-9.64l-12.998-32.792c-2.306-5.819-7.931-9.64-14.191-9.64h-107.898c-8.43 0-15.265 6.834-15.265 15.265v21.542c0 8.43-6.834 15.265-15.265 15.265h-1.407c-11.256 0-20.38 9.124-20.38 20.379v312.611c0 18.849 15.28 34.129 34.129 34.129h410.512v-346.74c0-11.255-9.124-20.379-20.379-20.379z\" fill=\"#fef0ae\"/><path d=\"m444.639 145.278v320.313h-410.505c-3.722 0-7.31-.596-10.661-1.696 13.632-4.472 23.481-17.302 23.481-32.435v-265.806c0-11.257 9.119-20.376 20.376-20.376z\" fill=\"#fee97d\"/><path d=\"m201.595 98.48h-20.561c-6.261 0-11.884-3.824-14.187-9.643l-13.005-32.795c-2.303-5.819-7.926-9.633-14.187-9.633h20.561c6.261 0 11.884 3.814 14.187 9.633l13.005 32.795c2.303 5.819 7.926 9.643 14.187 9.643z\" fill=\"#fee97d\"/><path d=\"m88.644 145.274h379.732c11.255 0 20.38 9.124 20.38 20.38v279.562c0 11.255-9.124 20.38-20.38 20.38h-400.112-34.132c18.851 0 34.132-15.281 34.132-34.132v-265.81c0-11.255 9.125-20.38 20.38-20.38z\" fill=\"#fee45a\"/>\n                            <path d=\"m488.753 165.654v279.561c0 11.257-9.119 20.376-20.376 20.376h-19.883c11.257 0 20.386-9.119 20.386-20.376v-279.561c0-11.257-9.129-20.376-20.386-20.376h19.883c11.257 0 20.376 9.119 20.376 20.376z\" fill=\"#fed402\"/><g><path d=\"m182.928 378.346h-66.674c-4.258 0-7.71-3.452-7.71-7.71s3.452-7.71 7.71-7.71h66.674c4.258 0 7.71 3.452 7.71 7.71s-3.452 7.71-7.71 7.71z\" fill=\"#fac600\"/></g><g><path d=\"m222.32 410.401h-106.066c-4.258 0-7.71-3.452-7.71-7.71s3.452-7.71 7.71-7.71h106.066c4.258 0 7.71 3.452 7.71 7.71.001 4.258-3.451 7.71-7.71 7.71z\" fill=\"#fac600\"/></g></g><circle cx=\"416.741\" cy=\"145.274\" fill=\"#97da7b\" r=\"95.259\"/><path d=\"m511.998 145.278c0 52.606-42.644 95.26-95.26 95.26-20.859 0-40.156-6.703-55.844-18.083 11.504 4.934 24.19 7.669 37.504 7.669 52.616 0 95.26-42.654 95.26-95.26 0-31.746-15.534-59.864-39.416-77.176 33.966 14.556 57.756 48.287 57.756 87.59z\" fill=\"#80d261\"/>\n                            <path d=\"m464.544 130.937-36.282-40.78c-2.926-3.289-7.119-5.17-11.521-5.17s-8.595 1.881-11.521 5.17l-36.282 40.78c-5.661 6.363-5.092 16.111 1.271 21.772 6.364 5.662 16.111 5.092 21.772-1.271l9.34-10.498v49.2c0 8.517 6.904 15.421 15.421 15.421s15.421-6.904 15.421-15.421v-49.2l9.34 10.498c3.047 3.425 7.277 5.17 11.527 5.17 3.646 0 7.306-1.286 10.245-3.9 6.361-5.66 6.93-15.407 1.269-21.771z\" fill=\"#eaf6ff\"/><g fill=\"#d8ecfe\">\n                            <path d=\"m425.805 151.436c1.789 2.005 3.989 3.444 6.353 4.277v34.43c0 8.512-6.898 15.421-15.421 15.421-2.858 0-5.541-.781-7.844-2.138 4.534-2.694 7.577-7.628 7.577-13.283v-35.688c0-4.726 5.841-6.947 8.981-3.416z\"/><path d=\"m463.278 152.711c-2.94 2.611-6.6 3.896-10.25 3.896-2.724 0-5.438-.72-7.834-2.138.833-.504 1.635-1.09 2.385-1.758 6.364-5.665 6.929-15.411 1.275-21.774l-36.28-40.783c-1.069-1.203-2.313-2.221-3.68-3.012 2.354-1.398 5.058-2.149 7.844-2.149 4.41 0 8.595 1.881 11.525 5.161l36.28 40.783c5.664 6.363 5.088 16.109-1.265 21.774z\"/></g></g>\n                        </svg>\n                    </span> \n                    <div className=\"uploadTxt\">Click To Upload A File</div>\n                </label>\n                <input type='submit' className=\"slidegen-btn primary-color float-right mt-5\" value='Upload'/>\n            </form>\n            {/* FILE UPLOAD FORM END */}\n            <div className=\"output\">\n                { error && <div className=\"error\">{error}</div>}\n            </div>\n        </div>\n    );\n    \n}\n\nexport default FileUpload;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/SlidePreview.js",["209","210","211"],"import React from 'react';\nimport axios from 'axios';\n\nconst ImageUpload = () => {\n    let slideSetArr;\n    var listOfImages =[];\n\n    function importAll(r) {\n        return r.keys().map(r);\n    }\n\n    componentWillMount();\n\n    // IMPORTING ALL IMAGES FROM UPLOADS FOLDER\n    function componentWillMount() {\n        listOfImages = importAll(require.context('../../../client/public/uploads/', false, /\\.(png|jpe?g|svg)$/));\n    }\n\n    // REMOVE IMAGES FROM UPLOADS FOLDER\n    const removeImage = async (filename) => {\n        console.log(\"Filenmae:\",  filename);\n        try {\n            const res = await axios.delete('http://localhost:5000/delete', {url: filename});\n        } catch(err) {\n            if(err === 500) {\n                console.log(\"There was a problem with the server\");\n            } else {\n                console.log(\"as\", err.response);\n            }\n        }\n    }   \n\n    return (\n        <div className=\"slide-preview\">\n            {/* IMAGE LIST CONTAINER START */}\n            { listOfImages && listOfImages.map((image, index) => \n                <div className=\"slide-preview-item\">\n                    <div className=\"img-wrap\" key={image.id}>\n                        <img key={index} src={image.default} alt=\"info\" />\n                    </div>\n                </div>\n            )}\n            {/* IMAGE LIST CONTAINER ENDS */}\n        </div>\n    );\n}\n\nexport default ImageUpload;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/types.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/errorActions.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/NavBar/NavBar.js",["212"],"// NAVIGATION BAR ON HOME PAGE\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BsReverseLayoutTextWindowReverse } from 'react-icons/bs';\nimport RegisterModal from '../RegisterModal';\n\nconst NavBar = () => {\n    return (\n        <nav className=\"NavBarItems\">   \n            <div className=\"navbar-logo-container\">\n                <BsReverseLayoutTextWindowReverse className=\"navbar-logo\" />\n                <div className=\"navbar-txt navbar-logo\">Slide Hatch</div>\n            </div>\n            <ul className=\"nav-menu\">\n                {/* BUTTON START */}\n                <div className=\"slidegen-btn-container\">\n                    <Link to='/image-upload'>\n                        <button className=\"slidegen-btn home-btn\">\n                            Generate Slides\n                        </button>\n                    </Link>\n                </div>\n                {/* BUTTON END */}\n            </ul>\n        </nav>\n    )\n}\n\nexport default NavBar;","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reducers/index.js",[],"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/RegisterModal.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"// REGISTATION MODAL\nimport React, { useState, useCallback, useEffect, setState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { PropTypes, props } from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearError } from '../actions/errorActions';\n\nconst RegisterModal = (props) => {\n  const [modal, setModal] = useState(false);\n  const [username, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState(null);\n  const [formData, setFormData] = useState({ answer: \"\" });\n  const [registerUsername, setRegisterUsername] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [loginUsername, setloginUsername] = useState(\"\");\n  const [loginPassword, setloginPassword] = useState(\"\");\n\n  useEffect((prevProps) => {\n    // const { error, isAuthenticated } = props;\n    // if( error != prevProps.error) {\n    //     //Check for register erros\n    //     if(error.id === 'REGISTER_FAIL') {\n    //         setMsg(error.msg.msg);\n    //     } else {\n    //         setMsg(null);\n    //     }\n    // }\n\n    // if(modal) {\n    //     if(isAuthenticated) {\n    //         toggle();\n    //     }\n    // }\n  });\n\n  const toggle = () => {\n    // CLEAR ERRORS\n    props.clearError();\n    setModal(!modal);\n  }\n\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({ ...formData, hasChanged: true, [name]: value });\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // CREATE USER OBJECT\n    const newUser = {\n        registerUsername,\n        registerEmail,\n        registerPassword\n    }\n\n    // ATTEMPT TO REGISTER\n    props.register(newUser);\n  }\n\n  return (\n    <div>\n      <NavLink onClick={toggle} href=\"#\">\n        Register\n      </NavLink>\n\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Register</ModalHeader>\n        <ModalBody>\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                className=\"mb-3\"\n                onChange={e => setRegisterUsername(e.target.value)}\n              />\n\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                className=\"mb-3\"\n                onChange={onChange}\n              />\n\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                className=\"mb-3\"\n                onChange={e => setRegisterPassword(e.target.value)}\n              />\n              <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                Register\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nRegisterModal.propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearError:PropTypes.func.isRequired\n}\n\n    const mapStateToProps = (state) => ({\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.error\n    });\n\nexport default connect(mapStateToProps, \n    { register, clearError })(\n    RegisterModal\n);\n","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reducers/errorReducer.js",["228"],"import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\n\nconst initialState = {\n    msg: {},\n    status: null,\n    id: null \n}\n\nexport default function (state = initialState, action) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            };\n        case CLEAR_ERRORS:\n            return {\n                msg: {},\n                status: null,\n                id: null\n            };\n\n        default: \n            return state;\n    }\n}","/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/reducers/authReducer.js",["229"],"import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            };\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,  \n                isLoading: false\n            };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,  \n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}",{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":18},{"ruleId":"234","severity":1,"message":"238","line":14,"column":8,"nodeType":"236","messageId":"237","endLine":14,"endColumn":13},{"ruleId":"234","severity":1,"message":"239","line":15,"column":10,"nodeType":"236","messageId":"237","endLine":15,"endColumn":18},{"ruleId":"234","severity":1,"message":"240","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":19},{"ruleId":"234","severity":1,"message":"241","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":14},{"ruleId":"234","severity":1,"message":"242","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":29},{"ruleId":"234","severity":1,"message":"243","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":27},{"ruleId":"234","severity":1,"message":"244","line":8,"column":29,"nodeType":"236","messageId":"237","endLine":8,"endColumn":39},{"ruleId":"234","severity":1,"message":"245","line":8,"column":41,"nodeType":"236","messageId":"237","endLine":8,"endColumn":51},{"ruleId":"234","severity":1,"message":"246","line":8,"column":53,"nodeType":"236","messageId":"237","endLine":8,"endColumn":79},{"ruleId":"234","severity":1,"message":"247","line":8,"column":81,"nodeType":"236","messageId":"237","endLine":8,"endColumn":93},{"ruleId":"248","severity":1,"message":"249","line":27,"column":8,"nodeType":"250","endLine":27,"endColumn":10,"suggestions":"251"},{"ruleId":"234","severity":1,"message":"252","line":31,"column":11,"nodeType":"236","messageId":"237","endLine":31,"endColumn":29},{"ruleId":"234","severity":1,"message":"253","line":35,"column":11,"nodeType":"236","messageId":"237","endLine":35,"endColumn":21},{"ruleId":"234","severity":1,"message":"254","line":37,"column":15,"nodeType":"236","messageId":"237","endLine":37,"endColumn":18},{"ruleId":"234","severity":1,"message":"255","line":53,"column":23,"nodeType":"236","messageId":"237","endLine":53,"endColumn":30},{"ruleId":"234","severity":1,"message":"256","line":17,"column":17,"nodeType":"236","messageId":"237","endLine":17,"endColumn":23},{"ruleId":"234","severity":1,"message":"257","line":23,"column":12,"nodeType":"236","messageId":"237","endLine":23,"endColumn":19},{"ruleId":"234","severity":1,"message":"258","line":23,"column":21,"nodeType":"236","messageId":"237","endLine":23,"endColumn":31},{"ruleId":"234","severity":1,"message":"259","line":59,"column":29,"nodeType":"236","messageId":"237","endLine":59,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":102,"column":57,"nodeType":"262","endLine":102,"endColumn":69},{"ruleId":"234","severity":1,"message":"241","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"263","line":2,"column":29,"nodeType":"236","messageId":"237","endLine":2,"endColumn":38},{"ruleId":"234","severity":1,"message":"264","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":20},{"ruleId":"234","severity":1,"message":"265","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":18},{"ruleId":"234","severity":1,"message":"266","line":23,"column":9,"nodeType":"236","messageId":"237","endLine":23,"endColumn":11},{"ruleId":"248","severity":1,"message":"267","line":23,"column":14,"nodeType":"268","endLine":23,"endColumn":28},{"ruleId":"234","severity":1,"message":"254","line":25,"column":15,"nodeType":"236","messageId":"237","endLine":25,"endColumn":18},{"ruleId":"234","severity":1,"message":"269","line":28,"column":17,"nodeType":"236","messageId":"237","endLine":28,"endColumn":20},{"ruleId":"234","severity":1,"message":"254","line":41,"column":15,"nodeType":"236","messageId":"237","endLine":41,"endColumn":18},{"ruleId":"234","severity":1,"message":"270","line":51,"column":11,"nodeType":"236","messageId":"237","endLine":51,"endColumn":23},{"ruleId":"234","severity":1,"message":"271","line":60,"column":11,"nodeType":"236","messageId":"237","endLine":60,"endColumn":14},{"ruleId":"234","severity":1,"message":"241","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":14},{"ruleId":"234","severity":1,"message":"264","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":20},{"ruleId":"234","severity":1,"message":"265","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":18},{"ruleId":"234","severity":1,"message":"272","line":12,"column":9,"nodeType":"236","messageId":"237","endLine":12,"endColumn":14},{"ruleId":"234","severity":1,"message":"255","line":16,"column":19,"nodeType":"236","messageId":"237","endLine":16,"endColumn":26},{"ruleId":"234","severity":1,"message":"241","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":14},{"ruleId":"234","severity":1,"message":"273","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":27},{"ruleId":"234","severity":1,"message":"263","line":1,"column":29,"nodeType":"236","messageId":"237","endLine":1,"endColumn":38},{"ruleId":"234","severity":1,"message":"264","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":20},{"ruleId":"234","severity":1,"message":"274","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":16},{"ruleId":"234","severity":1,"message":"240","line":5,"column":27,"nodeType":"236","messageId":"237","endLine":5,"endColumn":36},{"ruleId":"234","severity":1,"message":"254","line":16,"column":19,"nodeType":"236","messageId":"237","endLine":16,"endColumn":22},{"ruleId":"234","severity":1,"message":"263","line":2,"column":29,"nodeType":"236","messageId":"237","endLine":2,"endColumn":38},{"ruleId":"248","severity":1,"message":"275","line":16,"column":17,"nodeType":"268","endLine":16,"endColumn":31},{"ruleId":"234","severity":1,"message":"255","line":19,"column":23,"nodeType":"236","messageId":"237","endLine":19,"endColumn":30},{"ruleId":"234","severity":1,"message":"276","line":43,"column":15,"nodeType":"236","messageId":"237","endLine":43,"endColumn":21},{"ruleId":"234","severity":1,"message":"254","line":63,"column":15,"nodeType":"236","messageId":"237","endLine":63,"endColumn":18},{"ruleId":"260","severity":1,"message":"277","line":102,"column":57,"nodeType":"262","endLine":102,"endColumn":130},{"ruleId":"234","severity":1,"message":"241","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"278","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":18},{"ruleId":"234","severity":1,"message":"254","line":29,"column":15,"nodeType":"236","messageId":"237","endLine":29,"endColumn":18},{"ruleId":"234","severity":1,"message":"255","line":42,"column":27,"nodeType":"236","messageId":"237","endLine":42,"endColumn":34},{"ruleId":"260","severity":1,"message":"277","line":97,"column":57,"nodeType":"262","endLine":97,"endColumn":130},{"ruleId":"234","severity":1,"message":"263","line":2,"column":29,"nodeType":"236","messageId":"237","endLine":2,"endColumn":38},{"ruleId":"234","severity":1,"message":"242","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":29},{"ruleId":"234","severity":1,"message":"279","line":17,"column":9,"nodeType":"236","messageId":"237","endLine":17,"endColumn":14},{"ruleId":"248","severity":1,"message":"275","line":17,"column":17,"nodeType":"268","endLine":17,"endColumn":31},{"ruleId":"234","severity":1,"message":"276","line":34,"column":19,"nodeType":"236","messageId":"237","endLine":34,"endColumn":25},{"ruleId":"234","severity":1,"message":"252","line":50,"column":11,"nodeType":"236","messageId":"237","endLine":50,"endColumn":29},{"ruleId":"234","severity":1,"message":"253","line":54,"column":11,"nodeType":"236","messageId":"237","endLine":54,"endColumn":21},{"ruleId":"234","severity":1,"message":"254","line":56,"column":15,"nodeType":"236","messageId":"237","endLine":56,"endColumn":18},{"ruleId":"234","severity":1,"message":"263","line":1,"column":29,"nodeType":"236","messageId":"237","endLine":1,"endColumn":38},{"ruleId":"234","severity":1,"message":"242","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":29},{"ruleId":"234","severity":1,"message":"240","line":4,"column":27,"nodeType":"236","messageId":"237","endLine":4,"endColumn":36},{"ruleId":"234","severity":1,"message":"280","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":13},{"ruleId":"234","severity":1,"message":"281","line":11,"column":12,"nodeType":"236","messageId":"237","endLine":11,"endColumn":26},{"ruleId":"234","severity":1,"message":"282","line":11,"column":28,"nodeType":"236","messageId":"237","endLine":11,"endColumn":45},{"ruleId":"234","severity":1,"message":"283","line":14,"column":9,"nodeType":"236","messageId":"237","endLine":14,"endColumn":17},{"ruleId":"234","severity":1,"message":"279","line":15,"column":9,"nodeType":"236","messageId":"237","endLine":15,"endColumn":14},{"ruleId":"234","severity":1,"message":"252","line":19,"column":11,"nodeType":"236","messageId":"237","endLine":19,"endColumn":29},{"ruleId":"234","severity":1,"message":"284","line":3,"column":95,"nodeType":"236","messageId":"237","endLine":3,"endColumn":119},{"ruleId":"234","severity":1,"message":"241","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":14},{"ruleId":"234","severity":1,"message":"285","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":13},{"ruleId":"234","severity":1,"message":"286","line":10,"column":12,"nodeType":"236","messageId":"237","endLine":10,"endColumn":19},{"ruleId":"234","severity":1,"message":"287","line":10,"column":21,"nodeType":"236","messageId":"237","endLine":10,"endColumn":31},{"ruleId":"234","severity":1,"message":"288","line":17,"column":12,"nodeType":"236","messageId":"237","endLine":17,"endColumn":20},{"ruleId":"234","severity":1,"message":"289","line":18,"column":12,"nodeType":"236","messageId":"237","endLine":18,"endColumn":24},{"ruleId":"234","severity":1,"message":"290","line":39,"column":11,"nodeType":"236","messageId":"237","endLine":39,"endColumn":20},{"ruleId":"234","severity":1,"message":"291","line":57,"column":13,"nodeType":"236","messageId":"237","endLine":57,"endColumn":20},{"ruleId":"234","severity":1,"message":"254","line":62,"column":19,"nodeType":"236","messageId":"237","endLine":62,"endColumn":22},{"ruleId":"234","severity":1,"message":"292","line":5,"column":9,"nodeType":"236","messageId":"237","endLine":5,"endColumn":20},{"ruleId":"234","severity":1,"message":"293","line":20,"column":11,"nodeType":"236","messageId":"237","endLine":20,"endColumn":22},{"ruleId":"234","severity":1,"message":"254","line":23,"column":19,"nodeType":"236","messageId":"237","endLine":23,"endColumn":22},{"ruleId":"234","severity":1,"message":"294","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":21},{"ruleId":"234","severity":1,"message":"295","line":2,"column":27,"nodeType":"236","messageId":"237","endLine":2,"endColumn":38},{"ruleId":"234","severity":1,"message":"296","line":2,"column":51,"nodeType":"236","messageId":"237","endLine":2,"endColumn":59},{"ruleId":"234","severity":1,"message":"297","line":16,"column":21,"nodeType":"236","messageId":"237","endLine":16,"endColumn":26},{"ruleId":"234","severity":1,"message":"298","line":22,"column":10,"nodeType":"236","messageId":"237","endLine":22,"endColumn":18},{"ruleId":"234","severity":1,"message":"299","line":22,"column":20,"nodeType":"236","messageId":"237","endLine":22,"endColumn":27},{"ruleId":"234","severity":1,"message":"300","line":23,"column":10,"nodeType":"236","messageId":"237","endLine":23,"endColumn":15},{"ruleId":"234","severity":1,"message":"301","line":23,"column":17,"nodeType":"236","messageId":"237","endLine":23,"endColumn":25},{"ruleId":"234","severity":1,"message":"302","line":24,"column":10,"nodeType":"236","messageId":"237","endLine":24,"endColumn":18},{"ruleId":"234","severity":1,"message":"303","line":24,"column":20,"nodeType":"236","messageId":"237","endLine":24,"endColumn":31},{"ruleId":"234","severity":1,"message":"304","line":25,"column":15,"nodeType":"236","messageId":"237","endLine":25,"endColumn":21},{"ruleId":"234","severity":1,"message":"305","line":29,"column":25,"nodeType":"236","messageId":"237","endLine":29,"endColumn":41},{"ruleId":"234","severity":1,"message":"306","line":30,"column":10,"nodeType":"236","messageId":"237","endLine":30,"endColumn":23},{"ruleId":"234","severity":1,"message":"307","line":30,"column":25,"nodeType":"236","messageId":"237","endLine":30,"endColumn":41},{"ruleId":"234","severity":1,"message":"308","line":31,"column":10,"nodeType":"236","messageId":"237","endLine":31,"endColumn":23},{"ruleId":"234","severity":1,"message":"309","line":31,"column":25,"nodeType":"236","messageId":"237","endLine":31,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":9,"column":1,"nodeType":"312","endLine":27,"endColumn":2},{"ruleId":"310","severity":1,"message":"311","line":19,"column":1,"nodeType":"312","endLine":57,"endColumn":2},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'loadUser' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'BsThreeDotsVertical' is defined but never used.","'BsFileEarmarkPlus' is defined but never used.","'BsFileDiff' is defined but never used.","'BsGridFill' is defined but never used.","'BsLayoutTextSidebarReverse' is defined but never used.","'BsPlusSquare' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'heading'. Either include it or remove the dependency array.","ArrayExpression",["315"],"'onsdisplayDropdown' is assigned a value but never used.","'deleteText' is assigned a value but never used.","'res' is assigned a value but never used.","'resPost' is assigned a value but never used.","'setOcr' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'text' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useParams' is defined but never used.","'SlidePreview' is defined but never used.","'FileUpload' is defined but never used.","'id' is assigned a value but never used.","Assignments to the 'id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'txt' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'log' is assigned a value but never used.","'sumID' is assigned a value but never used.","'useLocation' is defined but never used.","'Editor' is defined but never used.","Assignments to the 'texts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'resGet' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'texts' is assigned a value but never used.","'axios' is defined but never used.","'textCollection' is assigned a value but never used.","'setTextCollection' is assigned a value but never used.","'location' is assigned a value but never used.","'BsFillQuestionSquareFill' is defined but never used.","'Nav' is defined but never used.","'bgColor' is assigned a value but never used.","'setbgColor' is assigned a value but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'getBase64' is assigned a value but never used.","'newText' is assigned a value but never used.","'slideSetArr' is defined but never used.","'removeImage' is assigned a value but never used.","'RegisterModal' is defined but never used.","'useCallback' is defined but never used.","'setState' is defined but never used.","'props' is defined but never used.","'username' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setMsg' is assigned a value but never used.","'setRegisterEmail' is assigned a value but never used.","'loginUsername' is assigned a value but never used.","'setloginUsername' is assigned a value but never used.","'loginPassword' is assigned a value but never used.","'setloginPassword' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},"Update the dependencies array to be: [heading]",{"range":"318","text":"319"},[986,988],"[heading]"]