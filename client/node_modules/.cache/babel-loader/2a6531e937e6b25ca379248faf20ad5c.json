{"ast":null,"code":"const resolveURL = require('resolve-url');\n\nconst {\n  version,\n  dependencies\n} = require('../../../package.json');\n\nconst defaultOptions = require('../../constants/defaultOptions');\n/*\n * Default options for browser worker\n */\n\n\nmodule.exports = { ...defaultOptions,\n  workerPath: typeof process !== 'undefined' && process.env.TESS_ENV === 'development' ? resolveURL(`/dist/worker.dev.js?nocache=${Math.random().toString(36).slice(3)}`) : `https://unpkg.com/tesseract.js@v${version}/dist/worker.min.js`,\n\n  /*\n   * If browser doesn't support WebAssembly,\n   * load ASM version instead\n   */\n  corePath: `https://unpkg.com/tesseract.js-core@v${dependencies['tesseract.js-core'].substring(1)}/tesseract-core.${typeof WebAssembly === 'object' ? 'wasm' : 'asm'}.js`\n};","map":{"version":3,"sources":["/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/node_modules/tesseract.js/src/worker/browser/defaultOptions.js"],"names":["resolveURL","require","version","dependencies","defaultOptions","module","exports","workerPath","process","env","TESS_ENV","Math","random","toString","slice","corePath","substring","WebAssembly"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAA4BF,OAAO,CAAC,uBAAD,CAAzC;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,gCAAD,CAA9B;AAEA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,EACf,GAAGF,cADY;AAEfG,EAAAA,UAAU,EAAG,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5D,GACRV,UAAU,CAAE,+BAA8BW,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAoC,EAApE,CADF,GAEP,mCAAkCZ,OAAQ,qBAJhC;;AAKf;AACF;AACA;AACA;AACEa,EAAAA,QAAQ,EAAG,wCAAuCZ,YAAY,CAAC,mBAAD,CAAZ,CAAkCa,SAAlC,CAA4C,CAA5C,CAA+C,mBAAkB,OAAOC,WAAP,KAAuB,QAAvB,GAAkC,MAAlC,GAA2C,KAAM;AATrJ,CAAjB","sourcesContent":["const resolveURL = require('resolve-url');\nconst { version, dependencies } = require('../../../package.json');\nconst defaultOptions = require('../../constants/defaultOptions');\n\n/*\n * Default options for browser worker\n */\nmodule.exports = {\n  ...defaultOptions,\n  workerPath: (typeof process !== 'undefined' && process.env.TESS_ENV === 'development')\n    ? resolveURL(`/dist/worker.dev.js?nocache=${Math.random().toString(36).slice(3)}`)\n    : `https://unpkg.com/tesseract.js@v${version}/dist/worker.min.js`,\n  /*\n   * If browser doesn't support WebAssembly,\n   * load ASM version instead\n   */\n  corePath: `https://unpkg.com/tesseract.js-core@v${dependencies['tesseract.js-core'].substring(1)}/tesseract-core.${typeof WebAssembly === 'object' ? 'wasm' : 'asm'}.js`,\n};\n"]},"metadata":{},"sourceType":"script"}