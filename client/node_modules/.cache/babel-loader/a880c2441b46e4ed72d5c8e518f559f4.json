{"ast":null,"code":"var _jsxFileName = \"/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/RegisterModal.js\",\n    _s = $RefreshSig$();\n\n// REGISTATION MODAL\nimport React, { useState, useCallback, useEffect, setState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { PropTypes, props } from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearError } from '../actions/errorActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterModal = props => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [username, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState(null);\n  const [formData, setFormData] = useState({\n    answer: \"\"\n  });\n  const [registerUsername, setRegisterUsername] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [loginUsername, setloginUsername] = useState(\"\");\n  const [loginPassword, setloginPassword] = useState(\"\");\n  useEffect(prevProps => {// const { error, isAuthenticated } = props;\n    // if( error != prevProps.error) {\n    //     //Check for register erros\n    //     if(error.id === 'REGISTER_FAIL') {\n    //         setMsg(error.msg.msg);\n    //     } else {\n    //         setMsg(null);\n    //     }\n    // }\n    // if(modal) {\n    //     if(isAuthenticated) {\n    //         toggle();\n    //     }\n    // }\n  });\n\n  const toggle = () => {\n    // CLEAR ERRORS\n    props.clearError();\n    setModal(!modal);\n  };\n\n  const onChange = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setFormData({ ...formData,\n      hasChanged: true,\n      [name]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // CREATE USER OBJECT\n\n    const newUser = {\n      registerUsername,\n      registerEmail,\n      registerPassword\n    }; // ATTEMPT TO REGISTER\n\n    props.register(newUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      onClick: toggle,\n      href: \"#\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [msg ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 18\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: onSubmit,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Name\",\n              className: \"mb-3\",\n              onChange: e => setRegisterUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              for: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Email\",\n              className: \"mb-3\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              for: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              className: \"mb-3\",\n              onChange: e => setRegisterPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"dark\",\n              style: {\n                marginTop: '2rem'\n              },\n              block: true,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterModal, \"8AyC9XXVszR5UQxEBSrvzIte7gA=\");\n\n_c = RegisterModal;\nRegisterModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearError: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearError\n})(RegisterModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterModal\");","map":{"version":3,"sources":["/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/components/RegisterModal.js"],"names":["React","useState","useCallback","useEffect","setState","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","PropTypes","props","register","clearError","RegisterModal","modal","setModal","username","setName","email","setEmail","password","setPassword","msg","setMsg","formData","setFormData","answer","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","registerEmail","setRegisterEmail","loginUsername","setloginUsername","loginPassword","setloginPassword","prevProps","toggle","onChange","target","name","value","hasChanged","onSubmit","e","preventDefault","newUser","marginTop","propTypes","isAuthenticated","bool","error","object","isRequired","func","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["// REGISTATION MODAL\nimport React, { useState, useCallback, useEffect, setState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { PropTypes, props } from 'prop-types';\nimport { register } from '../actions/authActions';\nimport { clearError } from '../actions/errorActions';\n\nconst RegisterModal = (props) => {\n  const [modal, setModal] = useState(false);\n  const [username, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState(null);\n  const [formData, setFormData] = useState({ answer: \"\" });\n  const [registerUsername, setRegisterUsername] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [loginUsername, setloginUsername] = useState(\"\");\n  const [loginPassword, setloginPassword] = useState(\"\");\n\n  useEffect((prevProps) => {\n    // const { error, isAuthenticated } = props;\n    // if( error != prevProps.error) {\n    //     //Check for register erros\n    //     if(error.id === 'REGISTER_FAIL') {\n    //         setMsg(error.msg.msg);\n    //     } else {\n    //         setMsg(null);\n    //     }\n    // }\n\n    // if(modal) {\n    //     if(isAuthenticated) {\n    //         toggle();\n    //     }\n    // }\n  });\n\n  const toggle = () => {\n    // CLEAR ERRORS\n    props.clearError();\n    setModal(!modal);\n  }\n\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({ ...formData, hasChanged: true, [name]: value });\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    // CREATE USER OBJECT\n    const newUser = {\n        registerUsername,\n        registerEmail,\n        registerPassword\n    }\n\n    // ATTEMPT TO REGISTER\n    props.register(newUser);\n  }\n\n  return (\n    <div>\n      <NavLink onClick={toggle} href=\"#\">\n        Register\n      </NavLink>\n\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Register</ModalHeader>\n        <ModalBody>\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                className=\"mb-3\"\n                onChange={e => setRegisterUsername(e.target.value)}\n              />\n\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                className=\"mb-3\"\n                onChange={onChange}\n              />\n\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                className=\"mb-3\"\n                onChange={e => setRegisterPassword(e.target.value)}\n              />\n              <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                Register\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nRegisterModal.propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearError:PropTypes.func.isRequired\n}\n\n    const mapStateToProps = (state) => ({\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.error\n    });\n\nexport default connect(mapStateToProps, \n    { register, clearError })(\n    RegisterModal\n);\n"]},"metadata":{},"sourceType":"module"}