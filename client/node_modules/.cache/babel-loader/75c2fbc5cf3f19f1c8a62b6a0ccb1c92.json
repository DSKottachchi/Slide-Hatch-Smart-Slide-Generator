{"ast":null,"code":"/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, webkitURL, module */\n;\n\n(function ($) {\n  'use strict';\n  /**\n   * Loads an image for a given File object.\n   * Invokes the callback with an img or optional canvas element\n   * (if supported by the browser) as parameter:.\n   *\n   * @param {File|Blob|string} file File or Blob object or image URL\n   * @param {Function} [callback] Image load event callback\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|HTMLCanvasElement|FileReader} image object\n   */\n\n  function loadImage(file, callback, options) {\n    var img = document.createElement('img');\n    var url;\n    /**\n     * Callback for the fetchBlob call.\n     *\n     * @param {Blob} blob Blob object\n     * @param {Error} err Error object\n     */\n\n    function fetchBlobCallback(blob, err) {\n      if (err) console.log(err); // eslint-disable-line no-console\n\n      if (blob && loadImage.isInstanceOf('Blob', blob)) {\n        // eslint-disable-next-line no-param-reassign\n        file = blob;\n        url = loadImage.createObjectURL(file);\n      } else {\n        url = file;\n\n        if (options && options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin;\n        }\n      }\n\n      img.src = url;\n    }\n\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, url, callback, options);\n    };\n\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, url, callback, options);\n    };\n\n    if (typeof file === 'string') {\n      if (loadImage.hasMetaOption(options)) {\n        loadImage.fetchBlob(file, fetchBlobCallback, options);\n      } else {\n        fetchBlobCallback();\n      }\n\n      return img;\n    } else if (loadImage.isInstanceOf('Blob', file) || // Files are also Blob instances, but some browsers\n    // (Firefox 3.6) support the File API but not Blobs:\n    loadImage.isInstanceOf('File', file)) {\n      url = loadImage.createObjectURL(file);\n\n      if (url) {\n        img.src = url;\n        return img;\n      }\n\n      return loadImage.readFile(file, function (e) {\n        var target = e.target;\n\n        if (target && target.result) {\n          img.src = target.result;\n        } else if (callback) {\n          callback(e);\n        }\n      });\n    }\n  } // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n\n\n  var urlAPI = $.createObjectURL && $ || $.URL && URL.revokeObjectURL && URL || $.webkitURL && webkitURL;\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(url);\n    }\n  } // Determines if meta data should be loaded automatically.\n  // Requires the load image meta extension to load meta data.\n\n\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta;\n  }; // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n\n\n  loadImage.fetchBlob = function (url, callback) {\n    callback();\n  };\n\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  };\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data);\n  };\n\n  loadImage.onerror = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options);\n\n    if (callback) {\n      callback.call(img, event);\n    }\n  };\n\n  loadImage.onload = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options);\n\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {\n        originalWidth: img.naturalWidth || img.width,\n        originalHeight: img.naturalHeight || img.height\n      });\n    }\n  };\n\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false;\n  };\n\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false;\n  }; // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n\n\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader();\n      fileReader.onload = fileReader.onerror = callback; // eslint-disable-next-line no-param-reassign\n\n      method = method || 'readAsDataURL';\n\n      if (fileReader[method]) {\n        fileReader[method](file);\n        return fileReader;\n      }\n    }\n\n    return false;\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage;\n  } else {\n    $.loadImage = loadImage;\n  }\n})(typeof window !== 'undefined' && window || this);","map":{"version":3,"sources":["/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/node_modules/blueimp-load-image/js/load-image.js"],"names":["$","loadImage","file","callback","options","img","document","createElement","url","fetchBlobCallback","blob","err","console","log","isInstanceOf","createObjectURL","crossOrigin","src","onerror","event","onload","hasMetaOption","fetchBlob","readFile","e","target","result","urlAPI","URL","revokeObjectURL","webkitURL","revokeHelper","slice","noRevoke","meta","type","obj","Object","prototype","toString","call","transform","data","originalWidth","naturalWidth","width","originalHeight","naturalHeight","height","method","FileReader","fileReader","define","amd","module","exports","window"],"mappings":"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","sourcesContent":["/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, webkitURL, module */\n\n;(function ($) {\n  'use strict'\n\n  /**\n   * Loads an image for a given File object.\n   * Invokes the callback with an img or optional canvas element\n   * (if supported by the browser) as parameter:.\n   *\n   * @param {File|Blob|string} file File or Blob object or image URL\n   * @param {Function} [callback] Image load event callback\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|HTMLCanvasElement|FileReader} image object\n   */\n  function loadImage(file, callback, options) {\n    var img = document.createElement('img')\n    var url\n    /**\n     * Callback for the fetchBlob call.\n     *\n     * @param {Blob} blob Blob object\n     * @param {Error} err Error object\n     */\n    function fetchBlobCallback(blob, err) {\n      if (err) console.log(err) // eslint-disable-line no-console\n      if (blob && loadImage.isInstanceOf('Blob', blob)) {\n        // eslint-disable-next-line no-param-reassign\n        file = blob\n        url = loadImage.createObjectURL(file)\n      } else {\n        url = file\n        if (options && options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin\n        }\n      }\n      img.src = url\n    }\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, url, callback, options)\n    }\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, url, callback, options)\n    }\n    if (typeof file === 'string') {\n      if (loadImage.hasMetaOption(options)) {\n        loadImage.fetchBlob(file, fetchBlobCallback, options)\n      } else {\n        fetchBlobCallback()\n      }\n      return img\n    } else if (\n      loadImage.isInstanceOf('Blob', file) ||\n      // Files are also Blob instances, but some browsers\n      // (Firefox 3.6) support the File API but not Blobs:\n      loadImage.isInstanceOf('File', file)\n    ) {\n      url = loadImage.createObjectURL(file)\n      if (url) {\n        img.src = url\n        return img\n      }\n      return loadImage.readFile(file, function (e) {\n        var target = e.target\n        if (target && target.result) {\n          img.src = target.result\n        } else if (callback) {\n          callback(e)\n        }\n      })\n    }\n  }\n  // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n  var urlAPI =\n    ($.createObjectURL && $) ||\n    ($.URL && URL.revokeObjectURL && URL) ||\n    ($.webkitURL && webkitURL)\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(url)\n    }\n  }\n\n  // Determines if meta data should be loaded automatically.\n  // Requires the load image meta extension to load meta data.\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta\n  }\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback()\n  }\n\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data)\n  }\n\n  loadImage.onerror = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options)\n    if (callback) {\n      callback.call(img, event)\n    }\n  }\n\n  loadImage.onload = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options)\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {\n        originalWidth: img.naturalWidth || img.width,\n        originalHeight: img.naturalHeight || img.height\n      })\n    }\n  }\n\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false\n  }\n\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\n  }\n\n  // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader()\n      fileReader.onload = fileReader.onerror = callback\n      // eslint-disable-next-line no-param-reassign\n      method = method || 'readAsDataURL'\n      if (fileReader[method]) {\n        fileReader[method](file)\n        return fileReader\n      }\n    }\n    return false\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage\n  } else {\n    $.loadImage = loadImage\n  }\n})((typeof window !== 'undefined' && window) || this)\n"]},"metadata":{},"sourceType":"script"}