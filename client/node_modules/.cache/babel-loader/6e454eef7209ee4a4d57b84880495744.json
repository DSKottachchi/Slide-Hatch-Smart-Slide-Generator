{"ast":null,"code":"// import axios from 'axios';\n// import { returnErrors } from './errorActions';  \n// import {\n//     USER_LOADED,\n//     USER_LOADING,\n//     AUTH_ERROR,\n//     LOGIN_SUCCESS,\n//     LOGIN_FAIL,\n//     LOGOUT_SUCCESS,\n//     REGISTER_SUCCESS,\n//     REGISTER_FAIL\n// } from \"./types\";\n// // Check token and load user\n// export const loadUser = () => (dispatch, getState) => {\n//     // User loading\n//     dispatch({ type: USER_LOADING });\n//     axios.get('http://localhost:5000/api/auth/user', tokenConfig(getState))\n//         .then(res => dispatch({\n//             type: USER_LOADED,\n//             payload: res.data\n//         }))\n//         .catch(err => {\n//             dispatch(returnErrors(err.response, err.response));\n//             dispatch({\n//                 type: AUTH_ERROR\n//             })\n//         }); \n// }\n// //Register User\n// export const register = ({ name, email, password }) => dispatch => {\n//     // Headers\n//     const config = {\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }\n//     //Request body\n//     const body = JSON.stringify({ name, email, password });\n//     axios.post('http://localhost:5000/api/auth/user', body, config)\n//         .then(res => dispatch({\n//             type: REGISTER_SUCCESS,\n//             payload: res.data\n//         }))\n//         .catch(err => {\n//             dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n//             dispatch({\n//                 type: REGISTER_FAIL\n//             });\n//         })\n// }\n// // Setup config/headers and token\n// export const tokenConfig = getState => {\n//       // Get token from local storage\n//       const token = getState().auth.token;\n//       // Header\n//       const config = {\n//           headers: {\n//               \"Content-type\": \"application/json\"\n//           }\n//       }\n//       // If token, add to header\n//       if(token) {\n//           config.headers['x-auth-token'] = token;\n//       }\n//       return config;\n// }","map":{"version":3,"sources":["/Users/dilmikottachchi/Documents/Final Year Research Project/slide-generator-web/client/src/actions/authActions.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import axios from 'axios';\n// import { returnErrors } from './errorActions';  \n// import {\n//     USER_LOADED,\n//     USER_LOADING,\n//     AUTH_ERROR,\n//     LOGIN_SUCCESS,\n//     LOGIN_FAIL,\n//     LOGOUT_SUCCESS,\n//     REGISTER_SUCCESS,\n//     REGISTER_FAIL\n// } from \"./types\";\n\n// // Check token and load user\n// export const loadUser = () => (dispatch, getState) => {\n//     // User loading\n//     dispatch({ type: USER_LOADING });\n\n//     axios.get('http://localhost:5000/api/auth/user', tokenConfig(getState))\n//         .then(res => dispatch({\n//             type: USER_LOADED,\n//             payload: res.data\n//         }))\n//         .catch(err => {\n//             dispatch(returnErrors(err.response, err.response));\n//             dispatch({\n//                 type: AUTH_ERROR\n//             })\n//         }); \n// }\n\n// //Register User\n// export const register = ({ name, email, password }) => dispatch => {\n//     // Headers\n//     const config = {\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }\n\n//     //Request body\n//     const body = JSON.stringify({ name, email, password });\n\n//     axios.post('http://localhost:5000/api/auth/user', body, config)\n//         .then(res => dispatch({\n//             type: REGISTER_SUCCESS,\n//             payload: res.data\n//         }))\n//         .catch(err => {\n//             dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n//             dispatch({\n//                 type: REGISTER_FAIL\n//             });\n//         })\n// }\n\n// // Setup config/headers and token\n// export const tokenConfig = getState => {\n//       // Get token from local storage\n//       const token = getState().auth.token;\n\n//       // Header\n//       const config = {\n//           headers: {\n//               \"Content-type\": \"application/json\"\n//           }\n//       }\n  \n//       // If token, add to header\n//       if(token) {\n//           config.headers['x-auth-token'] = token;\n//       }\n\n//       return config;\n// }"]},"metadata":{},"sourceType":"module"}